# -*- coding: utf-8 -*-
"""Sentiment Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19DvWHWWRwgzIScTNzW78kQc921bi6d3C
"""

import pandas as pd
import nltk
df = pd.read_csv("Tweets.csv", encoding = "latin-1")

df.head(5)

df.shape

df = df[["airline_sentiment", "text"]]

df.shape

df.head(5)

import nltk

import string

import re



from nltk.stem.porter import PorterStemmer



nltk.download('stopwords')

from nltk.corpus import stopwords



nltk.download('punkt')

ps = PorterStemmer()

def clean_text(text):

      text = text.lower()
      text = re.sub(r'http.?://[^\s]+[\s]?', '', text)

      text = nltk.word_tokenize(text)

      y = []

      for i in text:

        if i not in stopwords.words('english'):

              y.append(i)

      text = y[:]

      y.clear()

      for i in text:

          y.append(ps.stem(i))

      return" ".join(y)

df['text_cleaned'] = df['text'].apply(clean_text)

from sklearn.feature_extraction.text import TfidfVectorizer

tf_vec = TfidfVectorizer(max_features = 3000)
X= tf_vec.fit_transform(df['text_cleaned']).toarray()

X.shape

Y =df['airline_sentiment'].values

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,Y,test_size=0.2,random_state=2)

from sklearn.naive_bayes import MultinomialNB

model = MultinomialNB()
model.fit(X_train,y_train)

from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score



model = RandomForestClassifier()

model.fit(X_train,y_train)

y_pred = model.predict(X_test)

print(accuracy_score(y_test,y_pred))